#문제 : 햄버거 분배
'''
[상황]
식탁의 길이가 N, 사람이 햄버거를 선택할 수 있는 거리가 K,
사람을 P, 햄버거를 H로 표시.
햄버거를 먹을 수 있는 사람의 최대 수를 구하기.

[입력]
1. 첫번째 줄 : N, K
2. 두 번째 줄 : 사람과 햄버거의 위치가 문자 P, H로 이루어진 길이 N인 문자열

[출력]
햄버거를 먹을 수 있는 최대 사람 수

[문제 해결 과정]
1. 최대한 많은 사람이 햄버거를 먹을 수 있게 -> 그리디
2. 배열 2개 필요(햄버거 , 사람), 오름차순 정렬 -> 투 포인터
 -> 앞에서 부터 순차적으로 매칭 시도
3. 각 배열에 포인터 설정
4. 순차적으로 현재 사람의 위치와 현재 햄버거의 위치 비교
    4-1. 햄버거위치 < 사람위치 - K
        : 햄버거 위치 +1, 사람위치 +1
    4-3. 햄버거 위치 > 사람위치 + K 
        : 사람 위치 +1
    
5. 종료 조건 : 두 포인터 중 한 포인터가 마지막 위치에 도달할 경우
'''

n, k = map(int, input().split())
arr = input().strip()

arrH = []
arrP = []

count = 0 #햄버거 개수
h = 0 #햄버거 포인터

for idx, char in enumerate(arr):
    if char == 'H':
        arrH.append(idx)
    else:
        arrP.append(idx)

#사람 위치가 담긴 배열을 기준으로 순회
for p in arrP:
    while h < len(arrH): #햄버거 포인터가 끝에 도달하면 종료
        
        #햄버거가 왼쪽에 있고, 사람이 닿을 수 없는 거리에 있을 경우
        if arrH[h] < p - k:  
            h += 1
        #햄버거가 오른쪽에 있고, 사람이 닿을 수 없는 거리에 있는 경우
        elif arrH[h] > p + k:
            break   #이 햄버거는 먹을 수 없음
        else:
            #햄버거는 왼쪽에 있는 햄버거를 기준으로
            #사람이 닿을 수 있는 거리에 있다면 할당됨(섭취가능)
            count += 1 #먹을 수 있는 햄버거 수 증가
            h += 1 #햄버거 위치는 오른쪽으로 이동
            break

print(count)